
lab4:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x33b>
  400248:	78 38                	js     400282 <_init-0x32e>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 18                	add    %bl,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 89 8f 87 f8 1b    	add    %cl,0x1bf8878f(%rcx)
  400289:	6d                   	insl   (%dx),%es:(%rdi)
  40028a:	d3 ac 4e dd b7 4b a0 	shrl   %cl,-0x5fb44823(%rsi,%rcx,2)
  400291:	13 e7                	adc    %edi,%esp
  400293:	52                   	push   %rdx
  400294:	16                   	(bad)  
  400295:	3f                   	(bad)  
  400296:	f9                   	stc    
  400297:	27                   	(bad)  

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	02 00                	add    (%rax),%al
  40029a:	00 00                	add    %al,(%rax)
  40029c:	0b 00                	or     (%rax),%eax
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
  4002a2:	00 00                	add    %al,(%rax)
  4002a4:	06                   	(bad)  
	...
  4002ad:	01 10                	add    %edx,(%rax)
  4002af:	00 0b                	add    %cl,(%rbx)
  4002b1:	00 00                	add    %al,(%rax)
  4002b3:	00 00                	add    %al,(%rax)
  4002b5:	00 00                	add    %al,(%rax)
  4002b7:	00 29                	add    %ch,(%rcx)
  4002b9:	1d                   	.byte 0x1d
  4002ba:	8c                   	.byte 0x8c
  4002bb:	1c                   	.byte 0x1c

Disassembly of section .dynsym:

00000000004002c0 <.dynsym>:
	...
  4002d8:	1c 00                	sbb    $0x0,%al
  4002da:	00 00                	add    %al,(%rax)
  4002dc:	12 00                	adc    (%rax),%al
	...
  4002ee:	00 00                	add    %al,(%rax)
  4002f0:	17                   	(bad)  
  4002f1:	00 00                	add    %al,(%rax)
  4002f3:	00 12                	add    %dl,(%rdx)
	...
  400305:	00 00                	add    %al,(%rax)
  400307:	00 32                	add    %dh,(%rdx)
  400309:	00 00                	add    %al,(%rax)
  40030b:	00 12                	add    %dl,(%rdx)
	...
  40031d:	00 00                	add    %al,(%rax)
  40031f:	00 24 00             	add    %ah,(%rax,%rax,1)
  400322:	00 00                	add    %al,(%rax)
  400324:	12 00                	adc    (%rax),%al
	...
  400336:	00 00                	add    %al,(%rax)
  400338:	44 00 00             	add    %r8b,(%rax)
  40033b:	00 12                	add    %dl,(%rdx)
	...
  40034d:	00 00                	add    %al,(%rax)
  40034f:	00 56 00             	add    %dl,0x0(%rsi)
  400352:	00 00                	add    %al,(%rax)
  400354:	20 00                	and    %al,(%rax)
	...
  400366:	00 00                	add    %al,(%rax)
  400368:	0b 00                	or     (%rax),%eax
  40036a:	00 00                	add    %al,(%rax)
  40036c:	12 00                	adc    (%rax),%al
	...
  40037e:	00 00                	add    %al,(%rax)
  400380:	39 00                	cmp    %eax,(%rax)
  400382:	00 00                	add    %al,(%rax)
  400384:	12 00                	adc    (%rax),%al
	...
  400396:	00 00                	add    %al,(%rax)
  400398:	12 00                	adc    (%rax),%al
  40039a:	00 00                	add    %al,(%rax)
  40039c:	12 00                	adc    (%rax),%al
	...
  4003ae:	00 00                	add    %al,(%rax)
  4003b0:	3e 00 00             	add    %al,%ds:(%rax)
  4003b3:	00 12                	add    %dl,(%rdx)
	...
  4003c5:	00 00                	add    %al,(%rax)
  4003c7:	00 2b                	add    %ch,(%rbx)
  4003c9:	00 00                	add    %al,(%rax)
  4003cb:	00 11                	add    %dl,(%rcx)
  4003cd:	00 19                	add    %bl,(%rcx)
  4003cf:	00 80 10 60 00 00    	add    %al,0x6010(%rax)
  4003d5:	00 00                	add    %al,(%rax)
  4003d7:	00 08                	add    %cl,(%rax)
  4003d9:	00 00                	add    %al,(%rax)
  4003db:	00 00                	add    %al,(%rax)
  4003dd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynstr:

00000000004003e0 <.dynstr>:
  4003e0:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  4003e4:	63 2e                	movslq (%rsi),%ebp
  4003e6:	73 6f                	jae    400457 <_init-0x159>
  4003e8:	2e 36 00 66 66       	cs add %ah,%ss:0x66(%rsi)
  4003ed:	6c                   	insb   (%dx),%es:(%rdi)
  4003ee:	75 73                	jne    400463 <_init-0x14d>
  4003f0:	68 00 65 78 69       	pushq  $0x69786500
  4003f5:	74 00                	je     4003f7 <_init-0x1b9>
  4003f7:	70 75                	jo     40046e <_init-0x142>
  4003f9:	74 73                	je     40046e <_init-0x142>
  4003fb:	00 70 75             	add    %dh,0x75(%rax)
  4003fe:	74 63                	je     400463 <_init-0x14d>
  400400:	68 61 72 00 70       	pushq  $0x70007261
  400405:	72 69                	jb     400470 <_init-0x140>
  400407:	6e                   	outsb  %ds:(%rsi),(%dx)
  400408:	74 66                	je     400470 <_init-0x140>
  40040a:	00 73 74             	add    %dh,0x74(%rbx)
  40040d:	64 6f                	outsl  %fs:(%rsi),(%dx)
  40040f:	75 74                	jne    400485 <_init-0x12b>
  400411:	00 73 79             	add    %dh,0x79(%rbx)
  400414:	73 74                	jae    40048a <_init-0x126>
  400416:	65 6d                	gs insl (%dx),%es:(%rdi)
  400418:	00 61 74             	add    %ah,0x74(%rcx)
  40041b:	6f                   	outsl  %ds:(%rsi),(%dx)
  40041c:	69 00 73 6c 65 65    	imul   $0x65656c73,(%rax),%eax
  400422:	70 00                	jo     400424 <_init-0x18c>
  400424:	5f                   	pop    %rdi
  400425:	5f                   	pop    %rdi
  400426:	6c                   	insb   (%dx),%es:(%rdi)
  400427:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  40042e:	72 74                	jb     4004a4 <_init-0x10c>
  400430:	5f                   	pop    %rdi
  400431:	6d                   	insl   (%dx),%es:(%rdi)
  400432:	61                   	(bad)  
  400433:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  40043a:	6f                   	outsl  %ds:(%rsi),(%dx)
  40043b:	6e                   	outsb  %ds:(%rsi),(%dx)
  40043c:	5f                   	pop    %rdi
  40043d:	73 74                	jae    4004b3 <_init-0xfd>
  40043f:	61                   	(bad)  
  400440:	72 74                	jb     4004b6 <_init-0xfa>
  400442:	5f                   	pop    %rdi
  400443:	5f                   	pop    %rdi
  400444:	00 47 4c             	add    %al,0x4c(%rdi)
  400447:	49                   	rex.WB
  400448:	42                   	rex.X
  400449:	43 5f                	rex.XB pop %r15
  40044b:	32 2e                	xor    (%rsi),%ch
  40044d:	32 2e                	xor    (%rsi),%ch
  40044f:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400452 <.gnu.version>:
  400452:	00 00                	add    %al,(%rax)
  400454:	02 00                	add    (%rax),%al
  400456:	02 00                	add    (%rax),%al
  400458:	02 00                	add    (%rax),%al
  40045a:	02 00                	add    (%rax),%al
  40045c:	02 00                	add    (%rax),%al
  40045e:	00 00                	add    %al,(%rax)
  400460:	02 00                	add    (%rax),%al
  400462:	02 00                	add    (%rax),%al
  400464:	02 00                	add    (%rax),%al
  400466:	02 00                	add    (%rax),%al
  400468:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000400470 <.gnu.version_r>:
  400470:	01 00                	add    %eax,(%rax)
  400472:	01 00                	add    %eax,(%rax)
  400474:	01 00                	add    %eax,(%rax)
  400476:	00 00                	add    %al,(%rax)
  400478:	10 00                	adc    %al,(%rax)
  40047a:	00 00                	add    %al,(%rax)
  40047c:	00 00                	add    %al,(%rax)
  40047e:	00 00                	add    %al,(%rax)
  400480:	75 1a                	jne    40049c <_init-0x114>
  400482:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400488:	65 00 00             	add    %al,%gs:(%rax)
  40048b:	00 00                	add    %al,(%rax)
  40048d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400490 <.rela.dyn>:
  400490:	f8                   	clc    
  400491:	0f 60 00             	punpcklbw (%rax),%mm0
  400494:	00 00                	add    %al,(%rax)
  400496:	00 00                	add    %al,(%rax)
  400498:	06                   	(bad)  
  400499:	00 00                	add    %al,(%rax)
  40049b:	00 06                	add    %al,(%rsi)
	...
  4004a5:	00 00                	add    %al,(%rax)
  4004a7:	00 80 10 60 00 00    	add    %al,0x6010(%rax)
  4004ad:	00 00                	add    %al,(%rax)
  4004af:	00 05 00 00 00 0b    	add    %al,0xb000000(%rip)        # b4004b5 <_end+0xadff41d>
	...

Disassembly of section .rela.plt:

00000000004004c0 <.rela.plt>:
  4004c0:	18 10                	sbb    %dl,(%rax)
  4004c2:	60                   	(bad)  
  4004c3:	00 00                	add    %al,(%rax)
  4004c5:	00 00                	add    %al,(%rax)
  4004c7:	00 07                	add    %al,(%rdi)
  4004c9:	00 00                	add    %al,(%rax)
  4004cb:	00 01                	add    %al,(%rcx)
	...
  4004d5:	00 00                	add    %al,(%rax)
  4004d7:	00 20                	add    %ah,(%rax)
  4004d9:	10 60 00             	adc    %ah,0x0(%rax)
  4004dc:	00 00                	add    %al,(%rax)
  4004de:	00 00                	add    %al,(%rax)
  4004e0:	07                   	(bad)  
  4004e1:	00 00                	add    %al,(%rax)
  4004e3:	00 02                	add    %al,(%rdx)
	...
  4004ed:	00 00                	add    %al,(%rax)
  4004ef:	00 28                	add    %ch,(%rax)
  4004f1:	10 60 00             	adc    %ah,0x0(%rax)
  4004f4:	00 00                	add    %al,(%rax)
  4004f6:	00 00                	add    %al,(%rax)
  4004f8:	07                   	(bad)  
  4004f9:	00 00                	add    %al,(%rax)
  4004fb:	00 03                	add    %al,(%rbx)
	...
  400505:	00 00                	add    %al,(%rax)
  400507:	00 30                	add    %dh,(%rax)
  400509:	10 60 00             	adc    %ah,0x0(%rax)
  40050c:	00 00                	add    %al,(%rax)
  40050e:	00 00                	add    %al,(%rax)
  400510:	07                   	(bad)  
  400511:	00 00                	add    %al,(%rax)
  400513:	00 04 00             	add    %al,(%rax,%rax,1)
	...
  40051e:	00 00                	add    %al,(%rax)
  400520:	38 10                	cmp    %dl,(%rax)
  400522:	60                   	(bad)  
  400523:	00 00                	add    %al,(%rax)
  400525:	00 00                	add    %al,(%rax)
  400527:	00 07                	add    %al,(%rdi)
  400529:	00 00                	add    %al,(%rax)
  40052b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 400531 <_init-0x7f>
  400531:	00 00                	add    %al,(%rax)
  400533:	00 00                	add    %al,(%rax)
  400535:	00 00                	add    %al,(%rax)
  400537:	00 40 10             	add    %al,0x10(%rax)
  40053a:	60                   	(bad)  
  40053b:	00 00                	add    %al,(%rax)
  40053d:	00 00                	add    %al,(%rax)
  40053f:	00 07                	add    %al,(%rdi)
  400541:	00 00                	add    %al,(%rax)
  400543:	00 06                	add    %al,(%rsi)
	...
  40054d:	00 00                	add    %al,(%rax)
  40054f:	00 48 10             	add    %cl,0x10(%rax)
  400552:	60                   	(bad)  
  400553:	00 00                	add    %al,(%rax)
  400555:	00 00                	add    %al,(%rax)
  400557:	00 07                	add    %al,(%rdi)
  400559:	00 00                	add    %al,(%rax)
  40055b:	00 07                	add    %al,(%rdi)
	...
  400565:	00 00                	add    %al,(%rax)
  400567:	00 50 10             	add    %dl,0x10(%rax)
  40056a:	60                   	(bad)  
  40056b:	00 00                	add    %al,(%rax)
  40056d:	00 00                	add    %al,(%rax)
  40056f:	00 07                	add    %al,(%rdi)
  400571:	00 00                	add    %al,(%rax)
  400573:	00 08                	add    %cl,(%rax)
	...
  40057d:	00 00                	add    %al,(%rax)
  40057f:	00 58 10             	add    %bl,0x10(%rax)
  400582:	60                   	(bad)  
  400583:	00 00                	add    %al,(%rax)
  400585:	00 00                	add    %al,(%rax)
  400587:	00 07                	add    %al,(%rdi)
  400589:	00 00                	add    %al,(%rax)
  40058b:	00 09                	add    %cl,(%rcx)
	...
  400595:	00 00                	add    %al,(%rax)
  400597:	00 60 10             	add    %ah,0x10(%rax)
  40059a:	60                   	(bad)  
  40059b:	00 00                	add    %al,(%rax)
  40059d:	00 00                	add    %al,(%rax)
  40059f:	00 07                	add    %al,(%rdi)
  4005a1:	00 00                	add    %al,(%rax)
  4005a3:	00 0a                	add    %cl,(%rdx)
	...

Disassembly of section .init:

00000000004005b0 <_init>:
  4005b0:	48 83 ec 08          	sub    $0x8,%rsp
  4005b4:	48 8b 05 3d 0a 20 00 	mov    0x200a3d(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  4005bb:	48 85 c0             	test   %rax,%rax
  4005be:	74 05                	je     4005c5 <_init+0x15>
  4005c0:	e8 6b 00 00 00       	callq  400630 <__gmon_start__@plt>
  4005c5:	48 83 c4 08          	add    $0x8,%rsp
  4005c9:	c3                   	retq   

Disassembly of section .plt:

00000000004005d0 <putchar@plt-0x10>:
  4005d0:	ff 35 32 0a 20 00    	pushq  0x200a32(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4005d6:	ff 25 34 0a 20 00    	jmpq   *0x200a34(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4005dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004005e0 <putchar@plt>:
  4005e0:	ff 25 32 0a 20 00    	jmpq   *0x200a32(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4005e6:	68 00 00 00 00       	pushq  $0x0
  4005eb:	e9 e0 ff ff ff       	jmpq   4005d0 <_init+0x20>

00000000004005f0 <puts@plt>:
  4005f0:	ff 25 2a 0a 20 00    	jmpq   *0x200a2a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4005f6:	68 01 00 00 00       	pushq  $0x1
  4005fb:	e9 d0 ff ff ff       	jmpq   4005d0 <_init+0x20>

0000000000400600 <system@plt>:
  400600:	ff 25 22 0a 20 00    	jmpq   *0x200a22(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400606:	68 02 00 00 00       	pushq  $0x2
  40060b:	e9 c0 ff ff ff       	jmpq   4005d0 <_init+0x20>

0000000000400610 <printf@plt>:
  400610:	ff 25 1a 0a 20 00    	jmpq   *0x200a1a(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400616:	68 03 00 00 00       	pushq  $0x3
  40061b:	e9 b0 ff ff ff       	jmpq   4005d0 <_init+0x20>

0000000000400620 <__libc_start_main@plt>:
  400620:	ff 25 12 0a 20 00    	jmpq   *0x200a12(%rip)        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400626:	68 04 00 00 00       	pushq  $0x4
  40062b:	e9 a0 ff ff ff       	jmpq   4005d0 <_init+0x20>

0000000000400630 <__gmon_start__@plt>:
  400630:	ff 25 0a 0a 20 00    	jmpq   *0x200a0a(%rip)        # 601040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400636:	68 05 00 00 00       	pushq  $0x5
  40063b:	e9 90 ff ff ff       	jmpq   4005d0 <_init+0x20>

0000000000400640 <fflush@plt>:
  400640:	ff 25 02 0a 20 00    	jmpq   *0x200a02(%rip)        # 601048 <_GLOBAL_OFFSET_TABLE_+0x48>
  400646:	68 06 00 00 00       	pushq  $0x6
  40064b:	e9 80 ff ff ff       	jmpq   4005d0 <_init+0x20>

0000000000400650 <atoi@plt>:
  400650:	ff 25 fa 09 20 00    	jmpq   *0x2009fa(%rip)        # 601050 <_GLOBAL_OFFSET_TABLE_+0x50>
  400656:	68 07 00 00 00       	pushq  $0x7
  40065b:	e9 70 ff ff ff       	jmpq   4005d0 <_init+0x20>

0000000000400660 <exit@plt>:
  400660:	ff 25 f2 09 20 00    	jmpq   *0x2009f2(%rip)        # 601058 <_GLOBAL_OFFSET_TABLE_+0x58>
  400666:	68 08 00 00 00       	pushq  $0x8
  40066b:	e9 60 ff ff ff       	jmpq   4005d0 <_init+0x20>

0000000000400670 <sleep@plt>:
  400670:	ff 25 ea 09 20 00    	jmpq   *0x2009ea(%rip)        # 601060 <_GLOBAL_OFFSET_TABLE_+0x60>
  400676:	68 09 00 00 00       	pushq  $0x9
  40067b:	e9 50 ff ff ff       	jmpq   4005d0 <_init+0x20>

Disassembly of section .text:

0000000000400680 <_start>:
  400680:	31 ed                	xor    %ebp,%ebp
  400682:	49 89 d1             	mov    %rdx,%r9
  400685:	5e                   	pop    %rsi
  400686:	48 89 e2             	mov    %rsp,%rdx
  400689:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40068d:	50                   	push   %rax
  40068e:	54                   	push   %rsp
  40068f:	49 c7 c0 b0 0a 40 00 	mov    $0x400ab0,%r8
  400696:	48 c7 c1 40 0a 40 00 	mov    $0x400a40,%rcx
  40069d:	48 c7 c7 07 08 40 00 	mov    $0x400807,%rdi
  4006a4:	e8 77 ff ff ff       	callq  400620 <__libc_start_main@plt>
  4006a9:	f4                   	hlt    
  4006aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004006b0 <deregister_tm_clones>:
  4006b0:	b8 7f 10 60 00       	mov    $0x60107f,%eax
  4006b5:	55                   	push   %rbp
  4006b6:	48 2d 78 10 60 00    	sub    $0x601078,%rax
  4006bc:	48 83 f8 0e          	cmp    $0xe,%rax
  4006c0:	48 89 e5             	mov    %rsp,%rbp
  4006c3:	77 02                	ja     4006c7 <deregister_tm_clones+0x17>
  4006c5:	5d                   	pop    %rbp
  4006c6:	c3                   	retq   
  4006c7:	b8 00 00 00 00       	mov    $0x0,%eax
  4006cc:	48 85 c0             	test   %rax,%rax
  4006cf:	74 f4                	je     4006c5 <deregister_tm_clones+0x15>
  4006d1:	5d                   	pop    %rbp
  4006d2:	bf 78 10 60 00       	mov    $0x601078,%edi
  4006d7:	ff e0                	jmpq   *%rax
  4006d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004006e0 <register_tm_clones>:
  4006e0:	b8 78 10 60 00       	mov    $0x601078,%eax
  4006e5:	55                   	push   %rbp
  4006e6:	48 2d 78 10 60 00    	sub    $0x601078,%rax
  4006ec:	48 c1 f8 03          	sar    $0x3,%rax
  4006f0:	48 89 e5             	mov    %rsp,%rbp
  4006f3:	48 89 c2             	mov    %rax,%rdx
  4006f6:	48 c1 ea 3f          	shr    $0x3f,%rdx
  4006fa:	48 01 d0             	add    %rdx,%rax
  4006fd:	48 d1 f8             	sar    %rax
  400700:	75 02                	jne    400704 <register_tm_clones+0x24>
  400702:	5d                   	pop    %rbp
  400703:	c3                   	retq   
  400704:	ba 00 00 00 00       	mov    $0x0,%edx
  400709:	48 85 d2             	test   %rdx,%rdx
  40070c:	74 f4                	je     400702 <register_tm_clones+0x22>
  40070e:	5d                   	pop    %rbp
  40070f:	48 89 c6             	mov    %rax,%rsi
  400712:	bf 78 10 60 00       	mov    $0x601078,%edi
  400717:	ff e2                	jmpq   *%rdx
  400719:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400720 <__do_global_dtors_aux>:
  400720:	80 3d 61 09 20 00 00 	cmpb   $0x0,0x200961(%rip)        # 601088 <completed.6973>
  400727:	75 11                	jne    40073a <__do_global_dtors_aux+0x1a>
  400729:	55                   	push   %rbp
  40072a:	48 89 e5             	mov    %rsp,%rbp
  40072d:	e8 7e ff ff ff       	callq  4006b0 <deregister_tm_clones>
  400732:	5d                   	pop    %rbp
  400733:	c6 05 4e 09 20 00 01 	movb   $0x1,0x20094e(%rip)        # 601088 <completed.6973>
  40073a:	f3 c3                	repz retq 
  40073c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400740 <frame_dummy>:
  400740:	48 83 3d d8 06 20 00 	cmpq   $0x0,0x2006d8(%rip)        # 600e20 <__JCR_END__>
  400747:	00 
  400748:	74 1e                	je     400768 <frame_dummy+0x28>
  40074a:	b8 00 00 00 00       	mov    $0x0,%eax
  40074f:	48 85 c0             	test   %rax,%rax
  400752:	74 14                	je     400768 <frame_dummy+0x28>
  400754:	55                   	push   %rbp
  400755:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  40075a:	48 89 e5             	mov    %rsp,%rbp
  40075d:	ff d0                	callq  *%rax
  40075f:	5d                   	pop    %rbp
  400760:	e9 7b ff ff ff       	jmpq   4006e0 <register_tm_clones>
  400765:	0f 1f 00             	nopl   (%rax)
  400768:	e9 73 ff ff ff       	jmpq   4006e0 <register_tm_clones>

000000000040076d <g>:
  40076d:	55                   	push   %rbp
  40076e:	48 89 e5             	mov    %rsp,%rbp
  400771:	bf c8 0a 40 00       	mov    $0x400ac8,%edi
  400776:	e8 75 fe ff ff       	callq  4005f0 <puts@plt>
  40077b:	bf 00 00 00 00       	mov    $0x0,%edi
  400780:	e8 db fe ff ff       	callq  400660 <exit@plt>
  400785:	5d                   	pop    %rbp
  400786:	c3                   	retq   

0000000000400787 <f>:
  400787:	55                   	push   %rbp
  400788:	48 89 e5             	mov    %rsp,%rbp
  40078b:	48 83 ec 10          	sub    $0x10,%rsp
  40078f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  400793:	0f b6 05 f2 08 20 00 	movzbl 0x2008f2(%rip),%eax        # 60108c <printstack>
  40079a:	84 c0                	test   %al,%al
  40079c:	74 10                	je     4007ae <f+0x27>
  40079e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  4007a2:	48 83 c0 30          	add    $0x30,%rax
  4007a6:	48 89 c7             	mov    %rax,%rdi
  4007a9:	e8 0f 02 00 00       	callq  4009bd <printStack>
  4007ae:	8b 05 dc 08 20 00    	mov    0x2008dc(%rip),%eax        # 601090 <thevariable>
  4007b4:	83 f8 31             	cmp    $0x31,%eax
  4007b7:	7e 0f                	jle    4007c8 <f+0x41>
  4007b9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  4007bd:	48 83 c0 30          	add    $0x30,%rax
  4007c1:	48 c7 00 6d 07 40 00 	movq   $0x40076d,(%rax)
  4007c8:	0f b6 05 bd 08 20 00 	movzbl 0x2008bd(%rip),%eax        # 60108c <printstack>
  4007cf:	84 c0                	test   %al,%al
  4007d1:	74 10                	je     4007e3 <f+0x5c>
  4007d3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  4007d7:	48 83 c0 30          	add    $0x30,%rax
  4007db:	48 89 c7             	mov    %rax,%rdi
  4007de:	e8 da 01 00 00       	callq  4009bd <printStack>
  4007e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4007e7:	c9                   	leaveq 
  4007e8:	c3                   	retq   

00000000004007e9 <h>:
  4007e9:	55                   	push   %rbp
  4007ea:	48 89 e5             	mov    %rsp,%rbp
  4007ed:	48 83 ec 10          	sub    $0x10,%rsp
  4007f1:	48 c7 45 f8 23 01 00 	movq   $0x123,-0x8(%rbp)
  4007f8:	00 
  4007f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4007fd:	48 89 c7             	mov    %rax,%rdi
  400800:	e8 82 ff ff ff       	callq  400787 <f>
  400805:	c9                   	leaveq 
  400806:	c3                   	retq   

0000000000400807 <main>:
  400807:	55                   	push   %rbp
  400808:	48 89 e5             	mov    %rsp,%rbp
  40080b:	48 83 ec 10          	sub    $0x10,%rsp
  40080f:	89 7d fc             	mov    %edi,-0x4(%rbp)
  400812:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  400816:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  40081a:	7f 14                	jg     400830 <main+0x29>
  40081c:	bf 08 0b 40 00       	mov    $0x400b08,%edi
  400821:	e8 ca fd ff ff       	callq  4005f0 <puts@plt>
  400826:	bf 00 00 00 00       	mov    $0x0,%edi
  40082b:	e8 30 fe ff ff       	callq  400660 <exit@plt>
  400830:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400834:	48 83 c0 08          	add    $0x8,%rax
  400838:	48 8b 00             	mov    (%rax),%rax
  40083b:	48 89 c7             	mov    %rax,%rdi
  40083e:	e8 0d fe ff ff       	callq  400650 <atoi@plt>
  400843:	89 05 47 08 20 00    	mov    %eax,0x200847(%rip)        # 601090 <thevariable>
  400849:	8b 05 41 08 20 00    	mov    0x200841(%rip),%eax        # 601090 <thevariable>
  40084f:	83 f8 31             	cmp    $0x31,%eax
  400852:	0f 8f d8 00 00 00    	jg     400930 <main+0x129>
  400858:	bf 32 0b 40 00       	mov    $0x400b32,%edi
  40085d:	b8 00 00 00 00       	mov    $0x0,%eax
  400862:	e8 a9 fd ff ff       	callq  400610 <printf@plt>
  400867:	48 8b 05 12 08 20 00 	mov    0x200812(%rip),%rax        # 601080 <stdout@@GLIBC_2.2.5>
  40086e:	48 89 c7             	mov    %rax,%rdi
  400871:	e8 ca fd ff ff       	callq  400640 <fflush@plt>
  400876:	bf 02 00 00 00       	mov    $0x2,%edi
  40087b:	b8 00 00 00 00       	mov    $0x0,%eax
  400880:	e8 eb fd ff ff       	callq  400670 <sleep@plt>
  400885:	bf 46 0b 40 00       	mov    $0x400b46,%edi
  40088a:	b8 00 00 00 00       	mov    $0x0,%eax
  40088f:	e8 7c fd ff ff       	callq  400610 <printf@plt>
  400894:	48 8b 05 e5 07 20 00 	mov    0x2007e5(%rip),%rax        # 601080 <stdout@@GLIBC_2.2.5>
  40089b:	48 89 c7             	mov    %rax,%rdi
  40089e:	e8 9d fd ff ff       	callq  400640 <fflush@plt>
  4008a3:	bf 02 00 00 00       	mov    $0x2,%edi
  4008a8:	b8 00 00 00 00       	mov    $0x0,%eax
  4008ad:	e8 be fd ff ff       	callq  400670 <sleep@plt>
  4008b2:	8b 05 d8 07 20 00    	mov    0x2007d8(%rip),%eax        # 601090 <thevariable>
  4008b8:	83 f8 13             	cmp    $0x13,%eax
  4008bb:	7f 11                	jg     4008ce <main+0xc7>
  4008bd:	bf 58 0b 40 00       	mov    $0x400b58,%edi
  4008c2:	b8 00 00 00 00       	mov    $0x0,%eax
  4008c7:	e8 44 fd ff ff       	callq  400610 <printf@plt>
  4008cc:	eb 2b                	jmp    4008f9 <main+0xf2>
  4008ce:	8b 05 bc 07 20 00    	mov    0x2007bc(%rip),%eax        # 601090 <thevariable>
  4008d4:	83 f8 1d             	cmp    $0x1d,%eax
  4008d7:	7f 11                	jg     4008ea <main+0xe3>
  4008d9:	bf 6d 0b 40 00       	mov    $0x400b6d,%edi
  4008de:	b8 00 00 00 00       	mov    $0x0,%eax
  4008e3:	e8 28 fd ff ff       	callq  400610 <printf@plt>
  4008e8:	eb 0f                	jmp    4008f9 <main+0xf2>
  4008ea:	bf 88 0b 40 00       	mov    $0x400b88,%edi
  4008ef:	b8 00 00 00 00       	mov    $0x0,%eax
  4008f4:	e8 17 fd ff ff       	callq  400610 <printf@plt>
  4008f9:	48 8b 05 80 07 20 00 	mov    0x200780(%rip),%rax        # 601080 <stdout@@GLIBC_2.2.5>
  400900:	48 89 c7             	mov    %rax,%rdi
  400903:	e8 38 fd ff ff       	callq  400640 <fflush@plt>
  400908:	bf 02 00 00 00       	mov    $0x2,%edi
  40090d:	b8 00 00 00 00       	mov    $0x0,%eax
  400912:	e8 59 fd ff ff       	callq  400670 <sleep@plt>
  400917:	bf 0a 00 00 00       	mov    $0xa,%edi
  40091c:	e8 bf fc ff ff       	callq  4005e0 <putchar@plt>
  400921:	48 8b 05 58 07 20 00 	mov    0x200758(%rip),%rax        # 601080 <stdout@@GLIBC_2.2.5>
  400928:	48 89 c7             	mov    %rax,%rdi
  40092b:	e8 10 fd ff ff       	callq  400640 <fflush@plt>
  400930:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
  400934:	75 09                	jne    40093f <main+0x138>
  400936:	c6 05 4f 07 20 00 00 	movb   $0x0,0x20074f(%rip)        # 60108c <printstack>
  40093d:	eb 07                	jmp    400946 <main+0x13f>
  40093f:	c6 05 46 07 20 00 01 	movb   $0x1,0x200746(%rip)        # 60108c <printstack>
  400946:	b8 00 00 00 00       	mov    $0x0,%eax
  40094b:	e8 99 fe ff ff       	callq  4007e9 <h>
  400950:	8b 05 3a 07 20 00    	mov    0x20073a(%rip),%eax        # 601090 <thevariable>
  400956:	83 f8 09             	cmp    $0x9,%eax
  400959:	7f 0c                	jg     400967 <main+0x160>
  40095b:	bf ac 0b 40 00       	mov    $0x400bac,%edi
  400960:	e8 8b fc ff ff       	callq  4005f0 <puts@plt>
  400965:	eb 4f                	jmp    4009b6 <main+0x1af>
  400967:	8b 05 23 07 20 00    	mov    0x200723(%rip),%eax        # 601090 <thevariable>
  40096d:	83 f8 13             	cmp    $0x13,%eax
  400970:	7f 0c                	jg     40097e <main+0x177>
  400972:	bf b9 0b 40 00       	mov    $0x400bb9,%edi
  400977:	e8 74 fc ff ff       	callq  4005f0 <puts@plt>
  40097c:	eb 38                	jmp    4009b6 <main+0x1af>
  40097e:	8b 05 0c 07 20 00    	mov    0x20070c(%rip),%eax        # 601090 <thevariable>
  400984:	83 f8 1d             	cmp    $0x1d,%eax
  400987:	7f 0c                	jg     400995 <main+0x18e>
  400989:	bf c8 0b 40 00       	mov    $0x400bc8,%edi
  40098e:	e8 5d fc ff ff       	callq  4005f0 <puts@plt>
  400993:	eb 21                	jmp    4009b6 <main+0x1af>
  400995:	8b 05 f5 06 20 00    	mov    0x2006f5(%rip),%eax        # 601090 <thevariable>
  40099b:	83 f8 27             	cmp    $0x27,%eax
  40099e:	7f 16                	jg     4009b6 <main+0x1af>
  4009a0:	bf d4 0b 40 00       	mov    $0x400bd4,%edi
  4009a5:	e8 46 fc ff ff       	callq  4005f0 <puts@plt>
  4009aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4009ae:	48 89 c7             	mov    %rax,%rdi
  4009b1:	e8 07 00 00 00       	callq  4009bd <printStack>
  4009b6:	b8 00 00 00 00       	mov    $0x0,%eax
  4009bb:	c9                   	leaveq 
  4009bc:	c3                   	retq   

00000000004009bd <printStack>:
  4009bd:	55                   	push   %rbp
  4009be:	48 89 e5             	mov    %rsp,%rbp
  4009c1:	48 83 ec 20          	sub    $0x20,%rsp
  4009c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4009c9:	bf e7 0b 40 00       	mov    $0x400be7,%edi
  4009ce:	e8 1d fc ff ff       	callq  4005f0 <puts@plt>
  4009d3:	c7 45 fc fd ff ff ff 	movl   $0xfffffffd,-0x4(%rbp)
  4009da:	eb 45                	jmp    400a21 <printStack+0x64>
  4009dc:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4009df:	48 98                	cltq   
  4009e1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4009e8:	00 
  4009e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4009ed:	48 01 d0             	add    %rdx,%rax
  4009f0:	48 8b 00             	mov    (%rax),%rax
  4009f3:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4009f6:	48 63 d2             	movslq %edx,%rdx
  4009f9:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
  400a00:	00 
  400a01:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400a05:	48 01 d1             	add    %rdx,%rcx
  400a08:	48 89 c2             	mov    %rax,%rdx
  400a0b:	48 89 ce             	mov    %rcx,%rsi
  400a0e:	bf ee 0b 40 00       	mov    $0x400bee,%edi
  400a13:	b8 00 00 00 00       	mov    $0x0,%eax
  400a18:	e8 f3 fb ff ff       	callq  400610 <printf@plt>
  400a1d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  400a21:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)
  400a25:	7e b5                	jle    4009dc <printStack+0x1f>
  400a27:	bf f7 0b 40 00       	mov    $0x400bf7,%edi
  400a2c:	e8 bf fb ff ff       	callq  4005f0 <puts@plt>
  400a31:	c9                   	leaveq 
  400a32:	c3                   	retq   
  400a33:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400a3a:	00 00 00 
  400a3d:	0f 1f 00             	nopl   (%rax)

0000000000400a40 <__libc_csu_init>:
  400a40:	41 57                	push   %r15
  400a42:	41 89 ff             	mov    %edi,%r15d
  400a45:	41 56                	push   %r14
  400a47:	49 89 f6             	mov    %rsi,%r14
  400a4a:	41 55                	push   %r13
  400a4c:	49 89 d5             	mov    %rdx,%r13
  400a4f:	41 54                	push   %r12
  400a51:	4c 8d 25 b8 03 20 00 	lea    0x2003b8(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400a58:	55                   	push   %rbp
  400a59:	48 8d 2d b8 03 20 00 	lea    0x2003b8(%rip),%rbp        # 600e18 <__init_array_end>
  400a60:	53                   	push   %rbx
  400a61:	4c 29 e5             	sub    %r12,%rbp
  400a64:	31 db                	xor    %ebx,%ebx
  400a66:	48 c1 fd 03          	sar    $0x3,%rbp
  400a6a:	48 83 ec 08          	sub    $0x8,%rsp
  400a6e:	e8 3d fb ff ff       	callq  4005b0 <_init>
  400a73:	48 85 ed             	test   %rbp,%rbp
  400a76:	74 1e                	je     400a96 <__libc_csu_init+0x56>
  400a78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400a7f:	00 
  400a80:	4c 89 ea             	mov    %r13,%rdx
  400a83:	4c 89 f6             	mov    %r14,%rsi
  400a86:	44 89 ff             	mov    %r15d,%edi
  400a89:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  400a8d:	48 83 c3 01          	add    $0x1,%rbx
  400a91:	48 39 eb             	cmp    %rbp,%rbx
  400a94:	75 ea                	jne    400a80 <__libc_csu_init+0x40>
  400a96:	48 83 c4 08          	add    $0x8,%rsp
  400a9a:	5b                   	pop    %rbx
  400a9b:	5d                   	pop    %rbp
  400a9c:	41 5c                	pop    %r12
  400a9e:	41 5d                	pop    %r13
  400aa0:	41 5e                	pop    %r14
  400aa2:	41 5f                	pop    %r15
  400aa4:	c3                   	retq   
  400aa5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  400aac:	00 00 00 00 

0000000000400ab0 <__libc_csu_fini>:
  400ab0:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400ab4 <_fini>:
  400ab4:	48 83 ec 08          	sub    $0x8,%rsp
  400ab8:	48 83 c4 08          	add    $0x8,%rsp
  400abc:	c3                   	retq   

Disassembly of section .rodata:

0000000000400ac0 <_IO_stdin_used>:
  400ac0:	01 00                	add    %eax,(%rax)
  400ac2:	02 00                	add    (%rax),%al
  400ac4:	00 00                	add    %al,(%rax)
  400ac6:	00 00                	add    %al,(%rax)
  400ac8:	4e 69 63 65 20 74 72 	rex.WRX imul $0x79727420,0x65(%rbx),%r12
  400acf:	79 
  400ad0:	2c 20                	sub    $0x20,%al
  400ad2:	68 61 63 6b 65       	pushq  $0x656b6361
  400ad7:	72 2e                	jb     400b07 <_IO_stdin_used+0x47>
  400ad9:	20 56 75             	and    %dl,0x75(%rsi)
  400adc:	6c                   	insb   (%dx),%es:(%rdi)
  400add:	6e                   	outsb  %ds:(%rsi),(%dx)
  400ade:	65 72 61             	gs jb  400b42 <_IO_stdin_used+0x82>
  400ae1:	62                   	(bad)  
  400ae2:	69 6c 69 74 79 20 72 	imul   $0x65722079,0x74(%rcx,%rbp,2),%ebp
  400ae9:	65 
  400aea:	6d                   	insl   (%dx),%es:(%rdi)
  400aeb:	6f                   	outsl  %ds:(%rsi),(%dx)
  400aec:	76 65                	jbe    400b53 <_IO_stdin_used+0x93>
  400aee:	64 21 0a             	and    %ecx,%fs:(%rdx)
  400af1:	7e 47                	jle    400b3a <_IO_stdin_used+0x7a>
  400af3:	61                   	(bad)  
  400af4:	72 72                	jb     400b68 <_IO_stdin_used+0xa8>
  400af6:	65 74 74             	gs je  400b6d <_IO_stdin_used+0xad>
  400af9:	20 20                	and    %ah,(%rax)
  400afb:	00 2f                	add    %ch,(%rdi)
  400afd:	62                   	(bad)  
  400afe:	69 6e 2f 73 68 00 00 	imul   $0x6873,0x2f(%rsi),%ebp
  400b05:	00 00                	add    %al,(%rax)
  400b07:	00 42 72             	add    %al,0x72(%rdx)
  400b0a:	72 72                	jb     400b7e <_IO_stdin_used+0xbe>
  400b0c:	2e 2e 20 79 6f       	cs and %bh,%cs:0x6f(%rcx)
  400b11:	75 20                	jne    400b33 <_IO_stdin_used+0x73>
  400b13:	61                   	(bad)  
  400b14:	72 65                	jb     400b7b <_IO_stdin_used+0xbb>
  400b16:	20 63 6f             	and    %ah,0x6f(%rbx)
  400b19:	6c                   	insb   (%dx),%es:(%rdi)
  400b1a:	64 2c 20             	fs sub $0x20,%al
  400b1d:	62                   	(bad)  
  400b1e:	75 74                	jne    400b94 <_IO_stdin_used+0xd4>
  400b20:	20 68 61             	and    %ch,0x61(%rax)
  400b23:	76 65                	jbe    400b8a <_IO_stdin_used+0xca>
  400b25:	20 61 20             	and    %ah,0x20(%rcx)
  400b28:	6e                   	outsb  %ds:(%rsi),(%dx)
  400b29:	69 63 65 20 64 61 79 	imul   $0x79616420,0x65(%rbx),%esp
  400b30:	21 00                	and    %eax,(%rax)
  400b32:	52                   	push   %rdx
  400b33:	75 6e                	jne    400ba3 <_IO_stdin_used+0xe3>
  400b35:	6e                   	outsb  %ds:(%rsi),(%dx)
  400b36:	69 6e 67 20 6e 6f 72 	imul   $0x726f6e20,0x67(%rsi),%ebp
  400b3d:	6d                   	insl   (%dx),%es:(%rdi)
  400b3e:	61                   	(bad)  
  400b3f:	6c                   	insb   (%dx),%es:(%rdi)
  400b40:	6c                   	insb   (%dx),%es:(%rdi)
  400b41:	79 2e                	jns    400b71 <_IO_stdin_used+0xb1>
  400b43:	2e 2e 00 73 74       	cs add %dh,%cs:0x74(%rbx)
  400b48:	69 6c 6c 20 74 68 69 	imul   $0x6e696874,0x20(%rsp,%rbp,2),%ebp
  400b4f:	6e 
  400b50:	6b 69 6e 67          	imul   $0x67,0x6e(%rcx),%ebp
  400b54:	2e 2e 2e 00 74 68 69 	cs cs add %dh,%cs:0x69(%rax,%rbp,2)
  400b5b:	73 20                	jae    400b7d <_IO_stdin_used+0xbd>
  400b5d:	69 73 20 61 20 74 6f 	imul   $0x6f742061,0x20(%rbx),%esi
  400b64:	75 67                	jne    400bcd <_IO_stdin_used+0x10d>
  400b66:	68 69 65 2e 2e       	pushq  $0x2e2e6569
  400b6b:	2e 00 74 68 69       	add    %dh,%cs:0x69(%rax,%rbp,2)
  400b70:	73 20                	jae    400b92 <_IO_stdin_used+0xd2>
  400b72:	69 73 20 61 20 72 65 	imul   $0x65722061,0x20(%rbx),%esi
  400b79:	61                   	(bad)  
  400b7a:	6c                   	insb   (%dx),%es:(%rdi)
  400b7b:	20 74 6f 75          	and    %dh,0x75(%rdi,%rbp,2)
  400b7f:	67 68 69 65 2e 2e    	addr32 pushq $0x2e2e6569
  400b85:	2e 00 00             	add    %al,%cs:(%rax)
  400b88:	74 68                	je     400bf2 <_IO_stdin_used+0x132>
  400b8a:	69 73 20 69 73 20 74 	imul   $0x74207369,0x20(%rbx),%esi
  400b91:	68 65 20 74 6f       	pushq  $0x6f742065
  400b96:	75 67                	jne    400bff <_IO_stdin_used+0x13f>
  400b98:	68 65 73 74 20       	pushq  $0x20747365
  400b9d:	6f                   	outsl  %ds:(%rsi),(%dx)
  400b9e:	66 20 74 68 65       	data16 and %dh,0x65(%rax,%rbp,2)
  400ba3:	6d                   	insl   (%dx),%es:(%rdi)
  400ba4:	20 61 6c             	and    %ah,0x6c(%rcx)
  400ba7:	6c                   	insb   (%dx),%es:(%rdi)
  400ba8:	2e 2e 2e 00 47 65    	cs cs add %al,%cs:0x65(%rdi)
  400bae:	74 74                	je     400c24 <_IO_stdin_used+0x164>
  400bb0:	69 6e 67 20 77 61 72 	imul   $0x72617720,0x67(%rsi),%ebp
  400bb7:	6d                   	insl   (%dx),%es:(%rdi)
  400bb8:	00 47 65             	add    %al,0x65(%rdi)
  400bbb:	74 74                	je     400c31 <_IO_stdin_used+0x171>
  400bbd:	69 6e 67 20 77 61 72 	imul   $0x72617720,0x67(%rsi),%ebp
  400bc4:	6d                   	insl   (%dx),%es:(%rdi)
  400bc5:	65 72 00             	gs jb  400bc8 <_IO_stdin_used+0x108>
  400bc8:	47                   	rex.RXB
  400bc9:	65 74 74             	gs je  400c40 <_IO_stdin_used+0x180>
  400bcc:	69 6e 67 20 68 6f 74 	imul   $0x746f6820,0x67(%rsi),%ebp
  400bd3:	00 48 65             	add    %cl,0x65(%rax)
  400bd6:	72 65                	jb     400c3d <_IO_stdin_used+0x17d>
  400bd8:	20 69 73             	and    %ch,0x73(%rcx)
  400bdb:	20 73 6f             	and    %dh,0x6f(%rbx)
  400bde:	6d                   	insl   (%dx),%es:(%rdi)
  400bdf:	65 20 68 65          	and    %ch,%gs:0x65(%rax)
  400be3:	6c                   	insb   (%dx),%es:(%rdi)
  400be4:	70 3a                	jo     400c20 <_IO_stdin_used+0x160>
  400be6:	00 73 74             	add    %dh,0x74(%rbx)
  400be9:	61                   	(bad)  
  400bea:	63 6b 3a             	movslq 0x3a(%rbx),%ebp
  400bed:	00 09                	add    %cl,(%rcx)
  400bef:	25 70 3a 20 25       	and    $0x25203a70,%eax
  400bf4:	70 0a                	jo     400c00 <_IO_stdin_used+0x140>
  400bf6:	00 2d 2d 2d 2d 2d    	add    %ch,0x2d2d2d2d(%rip)        # 2d6d3929 <_end+0x2d0d2891>
  400bfc:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  400c01:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  400c06:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  400c0b:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  400c10:	2d                   	.byte 0x2d
  400c11:	2d                   	.byte 0x2d
	...

Disassembly of section .eh_frame_hdr:

0000000000400c14 <.eh_frame_hdr>:
  400c14:	01 1b                	add    %ebx,(%rbx)
  400c16:	03 3b                	add    (%rbx),%edi
  400c18:	50                   	push   %rax
  400c19:	00 00                	add    %al,(%rax)
  400c1b:	00 09                	add    %cl,(%rcx)
  400c1d:	00 00                	add    %al,(%rax)
  400c1f:	00 bc f9 ff ff 9c 00 	add    %bh,0x9cffff(%rcx,%rdi,8)
  400c26:	00 00                	add    %al,(%rax)
  400c28:	6c                   	insb   (%dx),%es:(%rdi)
  400c29:	fa                   	cli    
  400c2a:	ff                   	(bad)  
  400c2b:	ff 6c 00 00          	ljmp   *0x0(%rax,%rax,1)
  400c2f:	00 59 fb             	add    %bl,-0x5(%rcx)
  400c32:	ff                   	(bad)  
  400c33:	ff c4                	inc    %esp
  400c35:	00 00                	add    %al,(%rax)
  400c37:	00 73 fb             	add    %dh,-0x5(%rbx)
  400c3a:	ff                   	(bad)  
  400c3b:	ff e4                	jmpq   *%rsp
  400c3d:	00 00                	add    %al,(%rax)
  400c3f:	00 d5                	add    %dl,%ch
  400c41:	fb                   	sti    
  400c42:	ff                   	(bad)  
  400c43:	ff 04 01             	incl   (%rcx,%rax,1)
  400c46:	00 00                	add    %al,(%rax)
  400c48:	f3 fb                	repz sti 
  400c4a:	ff                   	(bad)  
  400c4b:	ff 24 01             	jmpq   *(%rcx,%rax,1)
  400c4e:	00 00                	add    %al,(%rax)
  400c50:	a9 fd ff ff 44       	test   $0x44fffffd,%eax
  400c55:	01 00                	add    %eax,(%rax)
  400c57:	00 2c fe             	add    %ch,(%rsi,%rdi,8)
  400c5a:	ff                   	(bad)  
  400c5b:	ff 64 01 00          	jmpq   *0x0(%rcx,%rax,1)
  400c5f:	00 9c fe ff ff ac 01 	add    %bl,0x1acffff(%rsi,%rdi,8)
	...

Disassembly of section .eh_frame:

0000000000400c68 <__FRAME_END__-0x170>:
  400c68:	14 00                	adc    $0x0,%al
  400c6a:	00 00                	add    %al,(%rax)
  400c6c:	00 00                	add    %al,(%rax)
  400c6e:	00 00                	add    %al,(%rax)
  400c70:	01 7a 52             	add    %edi,0x52(%rdx)
  400c73:	00 01                	add    %al,(%rcx)
  400c75:	78 10                	js     400c87 <_IO_stdin_used+0x1c7>
  400c77:	01 1b                	add    %ebx,(%rbx)
  400c79:	0c 07                	or     $0x7,%al
  400c7b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  400c81:	00 00                	add    %al,(%rax)
  400c83:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400c86:	00 00                	add    %al,(%rax)
  400c88:	f8                   	clc    
  400c89:	f9                   	stc    
  400c8a:	ff                   	(bad)  
  400c8b:	ff 2a                	ljmp   *(%rdx)
	...
  400c95:	00 00                	add    %al,(%rax)
  400c97:	00 14 00             	add    %dl,(%rax,%rax,1)
  400c9a:	00 00                	add    %al,(%rax)
  400c9c:	00 00                	add    %al,(%rax)
  400c9e:	00 00                	add    %al,(%rax)
  400ca0:	01 7a 52             	add    %edi,0x52(%rdx)
  400ca3:	00 01                	add    %al,(%rcx)
  400ca5:	78 10                	js     400cb7 <_IO_stdin_used+0x1f7>
  400ca7:	01 1b                	add    %ebx,(%rbx)
  400ca9:	0c 07                	or     $0x7,%al
  400cab:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  400cb1:	00 00                	add    %al,(%rax)
  400cb3:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400cb6:	00 00                	add    %al,(%rax)
  400cb8:	18 f9                	sbb    %bh,%cl
  400cba:	ff                   	(bad)  
  400cbb:	ff b0 00 00 00 00    	pushq  0x0(%rax)
  400cc1:	0e                   	(bad)  
  400cc2:	10 46 0e             	adc    %al,0xe(%rsi)
  400cc5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400cc8:	0b 77 08             	or     0x8(%rdi),%esi
  400ccb:	80 00 3f             	addb   $0x3f,(%rax)
  400cce:	1a 3b                	sbb    (%rbx),%bh
  400cd0:	2a 33                	sub    (%rbx),%dh
  400cd2:	24 22                	and    $0x22,%al
  400cd4:	00 00                	add    %al,(%rax)
  400cd6:	00 00                	add    %al,(%rax)
  400cd8:	1c 00                	sbb    $0x0,%al
  400cda:	00 00                	add    %al,(%rax)
  400cdc:	44 00 00             	add    %r8b,(%rax)
  400cdf:	00 8d fa ff ff 1a    	add    %cl,0x1afffffa(%rbp)
  400ce5:	00 00                	add    %al,(%rax)
  400ce7:	00 00                	add    %al,(%rax)
  400ce9:	41 0e                	rex.B (bad) 
  400ceb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400cf1:	55                   	push   %rbp
  400cf2:	0c 07                	or     $0x7,%al
  400cf4:	08 00                	or     %al,(%rax)
  400cf6:	00 00                	add    %al,(%rax)
  400cf8:	1c 00                	sbb    $0x0,%al
  400cfa:	00 00                	add    %al,(%rax)
  400cfc:	64 00 00             	add    %al,%fs:(%rax)
  400cff:	00 87 fa ff ff 62    	add    %al,0x62fffffa(%rdi)
  400d05:	00 00                	add    %al,(%rax)
  400d07:	00 00                	add    %al,(%rax)
  400d09:	41 0e                	rex.B (bad) 
  400d0b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400d11:	02 5d 0c             	add    0xc(%rbp),%bl
  400d14:	07                   	(bad)  
  400d15:	08 00                	or     %al,(%rax)
  400d17:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400d1a:	00 00                	add    %al,(%rax)
  400d1c:	84 00                	test   %al,(%rax)
  400d1e:	00 00                	add    %al,(%rax)
  400d20:	c9                   	leaveq 
  400d21:	fa                   	cli    
  400d22:	ff                   	(bad)  
  400d23:	ff 1e                	lcall  *(%rsi)
  400d25:	00 00                	add    %al,(%rax)
  400d27:	00 00                	add    %al,(%rax)
  400d29:	41 0e                	rex.B (bad) 
  400d2b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400d31:	59                   	pop    %rcx
  400d32:	0c 07                	or     $0x7,%al
  400d34:	08 00                	or     %al,(%rax)
  400d36:	00 00                	add    %al,(%rax)
  400d38:	1c 00                	sbb    $0x0,%al
  400d3a:	00 00                	add    %al,(%rax)
  400d3c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
  400d3d:	00 00                	add    %al,(%rax)
  400d3f:	00 c7                	add    %al,%bh
  400d41:	fa                   	cli    
  400d42:	ff                   	(bad)  
  400d43:	ff b6 01 00 00 00    	pushq  0x1(%rsi)
  400d49:	41 0e                	rex.B (bad) 
  400d4b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400d51:	03 b1 01 0c 07 08    	add    0x8070c01(%rcx),%esi
  400d57:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400d5a:	00 00                	add    %al,(%rax)
  400d5c:	c4                   	(bad)  
  400d5d:	00 00                	add    %al,(%rax)
  400d5f:	00 5d fc             	add    %bl,-0x4(%rbp)
  400d62:	ff                   	(bad)  
  400d63:	ff 76 00             	pushq  0x0(%rsi)
  400d66:	00 00                	add    %al,(%rax)
  400d68:	00 41 0e             	add    %al,0xe(%rcx)
  400d6b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400d71:	02 71 0c             	add    0xc(%rcx),%dh
  400d74:	07                   	(bad)  
  400d75:	08 00                	or     %al,(%rax)
  400d77:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  400d7b:	00 e4                	add    %ah,%ah
  400d7d:	00 00                	add    %al,(%rax)
  400d7f:	00 c0                	add    %al,%al
  400d81:	fc                   	cld    
  400d82:	ff                   	(bad)  
  400d83:	ff 65 00             	jmpq   *0x0(%rbp)
  400d86:	00 00                	add    %al,(%rax)
  400d88:	00 42 0e             	add    %al,0xe(%rdx)
  400d8b:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
  400d91:	8e 03                	mov    (%rbx),%es
  400d93:	45 0e                	rex.RB (bad) 
  400d95:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
  400d9b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701be9 <_end+0xffffffff86100b51>
  400da1:	06                   	(bad)  
  400da2:	48 0e                	rex.W (bad) 
  400da4:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  400daa:	6c                   	insb   (%dx),%es:(%rdi)
  400dab:	0e                   	(bad)  
  400dac:	38 41 0e             	cmp    %al,0xe(%rcx)
  400daf:	30 41 0e             	xor    %al,0xe(%rcx)
  400db2:	28 42 0e             	sub    %al,0xe(%rdx)
  400db5:	20 42 0e             	and    %al,0xe(%rdx)
  400db8:	18 42 0e             	sbb    %al,0xe(%rdx)
  400dbb:	10 42 0e             	adc    %al,0xe(%rdx)
  400dbe:	08 00                	or     %al,(%rax)
  400dc0:	14 00                	adc    $0x0,%al
  400dc2:	00 00                	add    %al,(%rax)
  400dc4:	2c 01                	sub    $0x1,%al
  400dc6:	00 00                	add    %al,(%rax)
  400dc8:	e8 fc ff ff 02       	callq  3400dc9 <_end+0x2dffd31>
	...

0000000000400dd8 <__FRAME_END__>:
  400dd8:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	40 07                	rex (bad) 
  600e12:	40 00 00             	add    %al,(%rax)
  600e15:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	20 07                	and    %al,(%rdi)
  600e1a:	40 00 00             	add    %al,(%rax)
  600e1d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	01 00                	add    %eax,(%rax)
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	0c 00                	or     $0x0,%al
  600e3a:	00 00                	add    %al,(%rax)
  600e3c:	00 00                	add    %al,(%rax)
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	b0 05                	mov    $0x5,%al
  600e42:	40 00 00             	add    %al,(%rax)
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    %al,(%rax)
  600e4f:	00 b4 0a 40 00 00 00 	add    %dh,0x40(%rdx,%rcx,1)
  600e56:	00 00                	add    %al,(%rax)
  600e58:	19 00                	sbb    %eax,(%rax)
  600e5a:	00 00                	add    %al,(%rax)
  600e5c:	00 00                	add    %al,(%rax)
  600e5e:	00 00                	add    %al,(%rax)
  600e60:	10 0e                	adc    %cl,(%rsi)
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 1b                	add    %bl,(%rbx)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 08                	add    %cl,(%rax)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 1a                	add    %bl,(%rdx)
  600e79:	00 00                	add    %al,(%rax)
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 18                	add    %bl,(%rax)
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    %al,(%rax)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	08 00                	or     %al,(%rax)
  600e92:	00 00                	add    %al,(%rax)
  600e94:	00 00                	add    %al,(%rax)
  600e96:	00 00                	add    %al,(%rax)
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 e0                	add    %ah,%al
  600eb1:	03 40 00             	add    0x0(%rax),%eax
  600eb4:	00 00                	add    %al,(%rax)
  600eb6:	00 00                	add    %al,(%rax)
  600eb8:	06                   	(bad)  
  600eb9:	00 00                	add    %al,(%rax)
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 c0                	add    %al,%al
  600ec1:	02 40 00             	add    0x0(%rax),%al
  600ec4:	00 00                	add    %al,(%rax)
  600ec6:	00 00                	add    %al,(%rax)
  600ec8:	0a 00                	or     (%rax),%al
  600eca:	00 00                	add    %al,(%rax)
  600ecc:	00 00                	add    %al,(%rax)
  600ece:	00 00                	add    %al,(%rax)
  600ed0:	71 00                	jno    600ed2 <_DYNAMIC+0xaa>
  600ed2:	00 00                	add    %al,(%rax)
  600ed4:	00 00                	add    %al,(%rax)
  600ed6:	00 00                	add    %al,(%rax)
  600ed8:	0b 00                	or     (%rax),%eax
  600eda:	00 00                	add    %al,(%rax)
  600edc:	00 00                	add    %al,(%rax)
  600ede:	00 00                	add    %al,(%rax)
  600ee0:	18 00                	sbb    %al,(%rax)
  600ee2:	00 00                	add    %al,(%rax)
  600ee4:	00 00                	add    %al,(%rax)
  600ee6:	00 00                	add    %al,(%rax)
  600ee8:	15 00 00 00 00       	adc    $0x0,%eax
	...
  600ef5:	00 00                	add    %al,(%rax)
  600ef7:	00 03                	add    %al,(%rbx)
	...
  600f01:	10 60 00             	adc    %ah,0x0(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	02 00                	add    (%rax),%al
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	f0 00 00             	lock add %al,(%rax)
  600f13:	00 00                	add    %al,(%rax)
  600f15:	00 00                	add    %al,(%rax)
  600f17:	00 14 00             	add    %dl,(%rax,%rax,1)
  600f1a:	00 00                	add    %al,(%rax)
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 17                	add    %dl,(%rdi)
  600f29:	00 00                	add    %al,(%rax)
  600f2b:	00 00                	add    %al,(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 c0                	add    %al,%al
  600f31:	04 40                	add    $0x40,%al
  600f33:	00 00                	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 07                	add    %al,(%rdi)
  600f39:	00 00                	add    %al,(%rax)
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 90 04 40 00 00    	add    %dl,0x4004(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 08                	add    %cl,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 30                	add    %dh,(%rax)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 09                	add    %cl,(%rcx)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 18                	add    %bl,(%rax)
  600f61:	00 00                	add    %al,(%rax)
  600f63:	00 00                	add    %al,(%rax)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 fe                	add    %bh,%dh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 70 04             	add    %dh,0x4(%rax)
  600f72:	40 00 00             	add    %al,(%rax)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 ff                	add    %bh,%bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 01                	add    %al,(%rcx)
  600f81:	00 00                	add    %al,(%rax)
  600f83:	00 00                	add    %al,(%rax)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 f0                	add    %dh,%al
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f8d:	00 00                	add    %al,(%rax)
  600f8f:	00 52 04             	add    %dl,0x4(%rdx)
  600f92:	40 00 00             	add    %al,(%rax)
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 e6                	add    %ah,%dh
  601019:	05 40 00 00 00       	add    $0x40,%eax
  60101e:	00 00                	add    %al,(%rax)
  601020:	f6 05 40 00 00 00 00 	testb  $0x0,0x40(%rip)        # 601067 <_GLOBAL_OFFSET_TABLE_+0x67>
  601027:	00 06                	add    %al,(%rsi)
  601029:	06                   	(bad)  
  60102a:	40 00 00             	add    %al,(%rax)
  60102d:	00 00                	add    %al,(%rax)
  60102f:	00 16                	add    %dl,(%rsi)
  601031:	06                   	(bad)  
  601032:	40 00 00             	add    %al,(%rax)
  601035:	00 00                	add    %al,(%rax)
  601037:	00 26                	add    %ah,(%rsi)
  601039:	06                   	(bad)  
  60103a:	40 00 00             	add    %al,(%rax)
  60103d:	00 00                	add    %al,(%rax)
  60103f:	00 36                	add    %dh,(%rsi)
  601041:	06                   	(bad)  
  601042:	40 00 00             	add    %al,(%rax)
  601045:	00 00                	add    %al,(%rax)
  601047:	00 46 06             	add    %al,0x6(%rsi)
  60104a:	40 00 00             	add    %al,(%rax)
  60104d:	00 00                	add    %al,(%rax)
  60104f:	00 56 06             	add    %dl,0x6(%rsi)
  601052:	40 00 00             	add    %al,(%rax)
  601055:	00 00                	add    %al,(%rax)
  601057:	00 66 06             	add    %ah,0x6(%rsi)
  60105a:	40 00 00             	add    %al,(%rax)
  60105d:	00 00                	add    %al,(%rax)
  60105f:	00 76 06             	add    %dh,0x6(%rsi)
  601062:	40 00 00             	add    %al,(%rax)
  601065:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601068 <__data_start>:
	...

0000000000601070 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601080 <stdout@@GLIBC_2.2.5>:
	...

0000000000601088 <completed.6973>:
  601088:	00 00                	add    %al,(%rax)
	...

000000000060108c <printstack>:
  60108c:	00 00                	add    %al,(%rax)
	...

0000000000601090 <thevariable>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400538>
   a:	74 75                	je     81 <_init-0x40052f>
   c:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
   f:	38 2e                	cmp    %ch,(%rsi)
  11:	34 2d                	xor    $0x2d,%al
  13:	32 75 62             	xor    0x62(%rbp),%dh
  16:	75 6e                	jne    86 <_init-0x40052a>
  18:	74 75                	je     8f <_init-0x400521>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	34 2e                	xor    $0x2e,%al
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	33 29                	xor    (%rcx),%ebp
  24:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
  27:	38 2e                	cmp    %ch,(%rsi)
  29:	34 00                	xor    $0x0,%al
